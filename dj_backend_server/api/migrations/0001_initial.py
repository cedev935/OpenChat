# Generated by Django 4.2.3 on 2023-07-21 21:48

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chatbot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('token', models.CharField(max_length=255)),
                ('website', models.CharField(max_length=255, null=True)),
                ('status', models.CharField(default='draft', max_length=255)),
                ('prompt_message', models.TextField()),
                ('enhanced_privacy', models.BooleanField(default=False)),
                ('smart_sync', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'chatbots',
            },
        ),
        migrations.CreateModel(
            name='ChatbotSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chatbot_id', models.UUIDField()),
                ('name', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'chatbot_settings',
            },
        ),
        migrations.CreateModel(
            name='ChatHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chatbot_id', models.UUIDField()),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('from_user', models.CharField(max_length=4)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'chat_histories',
            },
        ),
        migrations.CreateModel(
            name='CodebaseDataSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chatbot_id', models.UUIDField()),
                ('repository', models.CharField(max_length=255)),
                ('ingested_at', models.DateTimeField(blank=True, null=True)),
                ('ingestion_status', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'codebase_data_sources',
            },
        ),
        migrations.CreateModel(
            name='CrawledPage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chatbot_id', models.UUIDField()),
                ('website_data_source_id', models.UUIDField()),
                ('url', models.CharField(max_length=255)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('status_code', models.CharField(blank=True, max_length=10, null=True)),
                ('aws_url', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'crawled_pages',
            },
        ),
        migrations.CreateModel(
            name='FailedJob',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(max_length=255, unique=True)),
                ('connection', models.TextField()),
                ('queue', models.TextField()),
                ('payload', models.TextField()),
                ('exception', models.TextField()),
                ('failed_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'failed_jobs',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('queue', models.CharField(db_index=True, max_length=255)),
                ('payload', models.TextField()),
                ('attempts', models.PositiveSmallIntegerField()),
                ('reserved_at', models.PositiveIntegerField(blank=True, null=True)),
                ('available_at', models.PositiveIntegerField()),
                ('created_at', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'jobs',
            },
        ),
        migrations.CreateModel(
            name='NotionDataSource',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'notion_data_sources',
            },
        ),
        migrations.CreateModel(
            name='OnboardingSteps',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chatbot_id', models.UUIDField()),
                ('name', models.CharField(max_length=255)),
                ('finished', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'onboarding_steps',
            },
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'password_reset_tokens',
            },
        ),
        migrations.CreateModel(
            name='PdfDataSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chatbot_id', models.UUIDField()),
                ('files', models.JSONField()),
                ('folder_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ingest_status', models.CharField(default='SUCCESS', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'pdf_data_sources',
            },
        ),
        migrations.CreateModel(
            name='TextDataSource',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'text_data_sources',
            },
        ),
        migrations.CreateModel(
            name='WebsiteDataSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chatbot_id', models.UUIDField()),
                ('root_url', models.CharField(max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('vector_databased_last_ingested_at', models.DateTimeField(blank=True, null=True)),
                ('crawling_status', models.CharField(default='pending', max_length=50)),
                ('crawling_progress', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'website_data_sources',
            },
        ),
        migrations.CreateModel(
            name='PersonalAccessToken',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tokenable_id', models.PositiveBigIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('token', models.CharField(max_length=64, unique=True)),
                ('abilities', models.TextField(null=True)),
                ('last_used_at', models.DateTimeField(null=True)),
                ('expires_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tokenable_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
    ]
